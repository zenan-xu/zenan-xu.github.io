"use strict";(self.webpackChunkzenan_website=self.webpackChunkzenan_website||[]).push([[475],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>v});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),c=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(a),m=i,v=p["".concat(o,".").concat(m)]||p[m]||u[m]||r;return a?n.createElement(v,l(l({ref:t},d),{},{components:a})):n.createElement(v,l({ref:t},d))}));function v(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[p]="string"==typeof e?e:i,l[1]=s;for(var c=2;c<r;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3958:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(7462),i=(a(7294),a(3905));const r={id:"java",sidebar_label:"Java",sidebar_position:2},l="Java",s={unversionedId:"java",id:"java",title:"Java",description:"Javadoc",source:"@site/notes/2_java.md",sourceDirName:".",slug:"/java",permalink:"/docs/java",draft:!1,editUrl:"https://github.com/zenan-xu/zenan-xu.github.io/tree/main/notes/2_java.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"java",sidebar_label:"Java",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"My Notes",permalink:"/docs/intro"},next:{title:"Spring / Spring-Boot",permalink:"/docs/spring-boot"}},o={},c=[{value:"Javadoc",id:"javadoc",level:2},{value:"Reference a method",id:"reference-a-method",level:3},{value:"Get size/length",id:"get-sizelength",level:3},{value:"Collections / Map",id:"collections--map",level:2},{value:"ArrayList vs LinkedList",id:"arraylist-vs-linkedlist",level:3},{value:"Test util",id:"test-util",level:2},{value:"Test private method",id:"test-private-method",level:3},{value:"Dynamically get/set field",id:"dynamically-getset-field",level:3}],d={toc:c};function p(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"java"},"Java"),(0,i.kt)("h2",{id:"javadoc"},"Javadoc"),(0,i.kt)("h3",{id:"reference-a-method"},"Reference a method"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javadoc"},"{@link Class#method()}\n")),(0,i.kt)("p",null,"If you get ",(0,i.kt)("inlineCode",{parentName:"p"},"Symbol ... is inaccessible from here")," in Intellij, check ",(0,i.kt)("a",{parentName:"p",href:"https://zenan-xu.github.io/docs/intellij#settings"},"intellij note")),(0,i.kt)("h3",{id:"get-sizelength"},"Get size/length"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"String : length()"),(0,i.kt)("li",{parentName:"ul"},"Collections : size()"),(0,i.kt)("li",{parentName:"ul"},"Map : size()"),(0,i.kt)("li",{parentName:"ul"},"Array : length")),(0,i.kt)("h2",{id:"collections--map"},"Collections / Map"),(0,i.kt)("h3",{id:"arraylist-vs-linkedlist"},"ArrayList vs LinkedList"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Internal Implementation",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"ArrayList internally uses a dynamic array to store its elements."),(0,i.kt)("li",{parentName:"ul"},"LinkedList uses Doubly Linked List to store its elements."))),(0,i.kt)("li",{parentName:"ol"},"Manipulation",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"ArrayList is slow as array manipulation is slower."),(0,i.kt)("li",{parentName:"ul"},"LinkedList is faster being node based as not much bit shifting required."))),(0,i.kt)("li",{parentName:"ol"},"Implementation",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"ArrayList implements only List. "),(0,i.kt)("li",{parentName:"ul"},"LinkedList implements List as well as Queue. It can acts as a queue as well."))),(0,i.kt)("li",{parentName:"ol"},"Access",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"ArrayList is faster in storing and accessing data."),(0,i.kt)("li",{parentName:"ul"},"LinkedList is faster in manipulation of data.")))),(0,i.kt)("h2",{id:"test-util"},"Test util"),(0,i.kt)("h3",{id:"test-private-method"},"Test private method"),(0,i.kt)("p",null,"Ex : ",(0,i.kt)("inlineCode",{parentName:"p"},'Object returnValue = executeMethod(getMethod("methodName", RequestParam.class), testClass, requestParam)')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"private static Object executeMethod(Method method, Object obj, Object... params) throws InvocationTargetException, IllegalAccessException {\n    method.setAccessible(true);\n    return method.invoke(obj, params)\n}\n\nprivate static Method getMethod(String methodName, Class<?>... clazz) throws NoSuchMethodException {\n   return TestClass.class.getDeclaredMethod(methodName, clazz);\n}\n")),(0,i.kt)("h3",{id:"dynamically-getset-field"},"Dynamically get/set field"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"@SneakyThrows\npublic static <T> T get(String fieldName, Object instance, Class<?> instanceClass) {\n   return (T) instanceClass.getDeclaredField(fieldName).get(instance);\n}\n\n@SneakyThrows\npublic static <T> void set(String fieldName, Object instance, T value) {\n   Field field = instance.getClass().getDeclaredField(fieldName);\n   field.setAccessible(true);\n   field.set(instance, value);\n}\n")))}p.isMDXComponent=!0}}]);