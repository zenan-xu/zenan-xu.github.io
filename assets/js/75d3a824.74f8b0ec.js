"use strict";(self.webpackChunkzenan_website=self.webpackChunkzenan_website||[]).push([[829],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(n),c=i,k=m["".concat(p,".").concat(c)]||m[c]||d[c]||r;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6349:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=n(7462),i=(n(7294),n(3905));const r={id:"intellij",sidebar_label:"Intellij idea",sidebar_position:4},l="Intellij idea",o={unversionedId:"intellij",id:"intellij",title:"Intellij idea",description:"These are MY favorite tips",source:"@site/notes/4_intellij-idea.md",sourceDirName:".",slug:"/intellij",permalink:"/docs/intellij",draft:!1,editUrl:"https://github.com/zenan-xu/zenan-xu.github.io/tree/main/notes/4_intellij-idea.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"intellij",sidebar_label:"Intellij idea",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Spring / Spring-Boot",permalink:"/docs/spring-boot"},next:{title:"Git / Github",permalink:"/docs/git"}},p={},s=[{value:"Shortcuts",id:"shortcuts",level:2},{value:"Settings",id:"settings",level:2},{value:"Get rid of the pop-up message asking to trust certificate",id:"get-rid-of-the-pop-up-message-asking-to-trust-certificate",level:3},{value:"<code>Open File or Project</code> dialog window hangs in loading state since new UI",id:"open-file-or-project-dialog-window-hangs-in-loading-state-since-new-ui",level:3},{value:"Open declaration source in the same tab",id:"open-declaration-source-in-the-same-tab",level:3},{value:"Resolve <code>Symbol ... is inaccessible from here</code>",id:"resolve-symbol--is-inaccessible-from-here",level:3},{value:"Plugins",id:"plugins",level:2},{value:"Live template",id:"live-template",level:2},{value:"Junit test method",id:"junit-test-method",level:3},{value:"Parameterized test with value source",id:"parameterized-test-with-value-source",level:3},{value:"Parameterized test with method source",id:"parameterized-test-with-method-source",level:3}],u={toc:s};function m(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"intellij-idea"},"Intellij idea"),(0,i.kt)("p",null,"\u2757 These are MY favorite tips"),(0,i.kt)("h2",{id:"shortcuts"},"Shortcuts"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Alt+<-/->")," back or forward place, ",(0,i.kt)("inlineCode",{parentName:"p"},"Alt+<-/->")," left or right tab")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Alt+H")," search in hierarchy (",(0,i.kt)("inlineCode",{parentName:"p"},"ctrl+shift+f"),")")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Alt+L")," format current file")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Alt+S")," open settings, ",(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Alt+Shift+S")," open project settings")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Alt+O")," optimize import")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+I")," preview implementation ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+F10"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+Alt+T")," show refactoring options")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+B")," go to the declaration, ",(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Alt+B")," navigate to an implementation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+C/X")," copy or cut the whole line")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+D")," duplicate line or selection")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+E")," view the most recently opened files")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+N")," find classes")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+W")," / ",(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+W")," increasing or decreasing sections of code near the cursor")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Y")," delete line")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Alt+F7")," find where something is used")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Alt+1")," open/close project window")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"F2")," jump to the next error, warning or suggestion.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Alt+J")," add selection for next occurrence")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"LocalHistory")," > ",(0,i.kt)("inlineCode",{parentName:"p"},"show History"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Help")," > ",(0,i.kt)("inlineCode",{parentName:"p"},"Change Memory Settings")," > ",(0,i.kt)("inlineCode",{parentName:"p"},"Edit Custom VM Options")))),(0,i.kt)("h2",{id:"settings"},"Settings"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Appearance")," > ",(0,i.kt)("inlineCode",{parentName:"li"},"Theme")," >> ","[NEWUI]"," Gradianto Deep Ocean"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Editor")," > ",(0,i.kt)("inlineCode",{parentName:"li"},"General")," > ",(0,i.kt)("inlineCode",{parentName:"li"},"Code Completion")," >> Uncheck ",(0,i.kt)("inlineCode",{parentName:"li"},"Match case"),", ignore cases for auto-completion"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Editor")," > ",(0,i.kt)("inlineCode",{parentName:"li"},"General")," > ",(0,i.kt)("inlineCode",{parentName:"li"},"Apperarance")," >> Check ",(0,i.kt)("inlineCode",{parentName:"li"},"Show method separators")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Editor")," > ",(0,i.kt)("inlineCode",{parentName:"li"},"General")," > ",(0,i.kt)("inlineCode",{parentName:"li"},"Editor Tabls")," >> Uncheck ",(0,i.kt)("inlineCode",{parentName:"li"},"Show tabls in one row")," (",(0,i.kt)("inlineCode",{parentName:"li"},"tab limit"),")")),(0,i.kt)("h3",{id:"get-rid-of-the-pop-up-message-asking-to-trust-certificate"},"Get rid of the pop-up message asking to trust certificate"),(0,i.kt)("p",null,"File | Settings | Tools | Server Certificates for Windows and linux"),(0,i.kt)("h3",{id:"open-file-or-project-dialog-window-hangs-in-loading-state-since-new-ui"},(0,i.kt)("inlineCode",{parentName:"h3"},"Open File or Project")," dialog window hangs in loading state since new UI"),(0,i.kt)("p",null,"It's possible to use a native file chooser on Windows.\nTo enable it, add the following properties to the Help | Edit Custom Properties file and restart IDE : "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sun.awt.windows.useCommonItemDialog=true\nide.win.file.chooser.native=true\n")),(0,i.kt)("h3",{id:"open-declaration-source-in-the-same-tab"},"Open declaration source in the same tab"),(0,i.kt)("p",null,"Uncheck ",(0,i.kt)("inlineCode",{parentName:"p"},"Enable preview tab")," in the settings of project view"),(0,i.kt)("h3",{id:"resolve-symbol--is-inaccessible-from-here"},"Resolve ",(0,i.kt)("inlineCode",{parentName:"h3"},"Symbol ... is inaccessible from here")),(0,i.kt)("p",null,"Java | Javadoc | Declaration has problems in Javadoc references"),(0,i.kt)("p",null,"Uncheck ",(0,i.kt)("inlineCode",{parentName:"p"},"Report inaccessible sympols")),(0,i.kt)("h2",{id:"plugins"},"Plugins"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Pokemon progress"),(0,i.kt)("li",{parentName:"ul"},"GitHub Copilot"),(0,i.kt)("li",{parentName:"ul"},"Rainbow Brackets")),(0,i.kt)("h2",{id:"live-template"},"Live template"),(0,i.kt)("h3",{id:"junit-test-method"},"Junit test method"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'@org.junit.jupiter.api.Test\n@org.junit.jupiter.api.DisplayName("$TEST_NAME$")\nvoid $METHOD_NAME$() {\n    // GIVEN\n    \n    // WHEN\n    \n    // THEN\n}\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Junit5 live template",src:n(3208).Z,width:"592",height:"355"})),(0,i.kt)("h3",{id:"parameterized-test-with-value-source"},"Parameterized test with value source"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'<template name="pvtest" value="@org.junit.jupiter.params.ParameterizedTest(name = &quot;{index} $SUB_TEST_NAME$ {0}&quot;)&#10;@org.junit.jupiter.api.DisplayName(&quot;$TEST_NAME$&quot;)&#10;@org.junit.jupiter.params.provider.ValueSource($TYPE$ = {})&#10;void $METHOD_NAME$($ARG$) {&#10;    // GIVEN&#10;    &#10;    // WHEN&#10;    &#10;    // THEN&#10;}" description="Parameterized test with value source" toReformat="true" toShortenFQNames="true">\n  <variable name="TEST_NAME" expression="" defaultValue="" alwaysStopAt="true" />\n  <variable name="SUB_TEST_NAME" expression="" defaultValue="" alwaysStopAt="true" />\n  <variable name="TYPE" expression="enum(&quot;strings&quot;,&quot;booleans&quot;,&quot;ints&quot;,&quot;longs&quot;,&quot;floats&quot;,&quot;doubles&quot;,&quot;chars&quot;,&quot;shorts&quot;,&quot;bytes&quot;,&quot;classes&quot;)" defaultValue="strings" alwaysStopAt="true" />\n  <variable name="METHOD_NAME" expression="camelCase(TEST_NAME)" defaultValue="" alwaysStopAt="true" />\n  <variable name="ARG" expression="" defaultValue="" alwaysStopAt="true" />\n  <context>\n    <option name="JAVA_DECLARATION" value="true" />\n  </context>\n</template>\n')),(0,i.kt)("h3",{id:"parameterized-test-with-method-source"},"Parameterized test with method source"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'<template name="pmtest" value="@org.junit.jupiter.params.ParameterizedTest(name = &quot;{index} $SUB_TEST_NAME$ {0}&quot;)&#10;@org.junit.jupiter.api.DisplayName(&quot;$TEST_NAME$&quot;)&#10;@org.junit.jupiter.params.provider.MethodSource&#10;void $METHOD_NAME$($ARG$) {&#10;    // GIVEN&#10;    &#10;    // WHEN&#10;    &#10;    // THEN&#10;}&#10;&#10;private static java.util.stream.Stream&lt;org.junit.jupiter.params.provider.Arguments&gt; $METHOD_NAME$() {&#10;    return Stream.of(Arguments.of(),&#10;            Arguments.of());&#10;}" description="Parameterized test with method source" toReformat="true" toShortenFQNames="true">\n  <variable name="TEST_NAME" expression="" defaultValue="" alwaysStopAt="true" />\n  <variable name="ARG" expression="" defaultValue="" alwaysStopAt="true" />\n  <variable name="SUB_TEST_NAME" expression="" defaultValue="" alwaysStopAt="true" />\n  <variable name="METHOD_NAME" expression="camelCase(TEST_NAME)" defaultValue="" alwaysStopAt="true" />\n  <context>\n    <option name="JAVA_DECLARATION" value="true" />\n  </context>\n</template>\n')))}m.isMDXComponent=!0},3208:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/junit5_live_template-a31acb78e390de845f82518ed48649b5.png"}}]);